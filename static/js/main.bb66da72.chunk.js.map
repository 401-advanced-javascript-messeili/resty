{"version":3,"sources":["components/Header.js","components/Form.js","components/Footer.js","components/Results.js","App.js","reportWebVitals.js","index.js"],"names":["Header","superagent","require","Form","props","handleChangeUrl","e","a","preventDefault","setState","url","target","value","method","console","log","state","get","then","data","handler","post","patch","delete","put","className","onSubmit","this","htmlFor","id","type","name","defaultChecked","React","Component","Footer","styles","Results","count","results","headers","src","App","handleForm","body","title","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sTASeA,G,MARA,WACb,OACE,iCACE,2CCFAC,G,MAAaC,EAAQ,KAwEZC,E,kDAtEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAIRC,gBALmB,uCAKD,WAAOC,GAAP,SAAAC,EAAA,6DAChBD,EAAEE,iBADc,SAEV,EAAKC,SAAS,CAAEC,IAAKJ,EAAEK,OAAOD,IAAIE,MAAOC,OAAQP,EAAEK,OAAOE,OAAOD,QAFvD,OAGhBE,QAAQC,IAAI,EAAKC,OAHD,KAIR,EAAKA,MAAMH,OAJH,OAKT,QALS,OAUT,SAVS,OAeT,UAfS,QAoBT,WApBS,QAyBT,QAzBS,+BAMZZ,EAAWgB,IAAX,UAAkB,EAAKD,MAAMN,MAAOQ,MAAK,SAACC,GACxC,EAAKf,MAAMgB,QAAQD,MAPT,mCAWZlB,EAAWoB,KAAX,UAAmB,EAAKL,MAAMN,MAAOQ,MAAK,SAACC,GACzC,EAAKf,MAAMgB,QAAQD,MAZT,oCAgBZlB,EAAWqB,MAAX,UAAoB,EAAKN,MAAMN,MAAOQ,MAAK,SAACC,GAC1C,EAAKf,MAAMgB,QAAQD,MAjBT,oCAqBZlB,EAAWsB,OAAX,UAAqB,EAAKP,MAAMN,MAAOQ,MAAK,SAACC,GAC3C,EAAKf,MAAMgB,QAAQD,MAtBT,oCA0BZlB,EAAWuB,IAAX,UAAkB,EAAKR,MAAMN,MAAOQ,MAAK,SAACC,GACxC,EAAKf,MAAMgB,QAAQD,MA3BT,qGALC,sDAEjB,EAAKH,MAAQ,CAAEN,IAAK,GAAIG,OAAQ,IAFf,E,qDA0CjB,OACE,+BACE,8BACE,uBAAMY,UAAU,SAASC,SAAUC,KAAKtB,gBAAxC,UACE,sBAAKoB,UAAU,MAAf,UACE,uBAAOG,QAAQ,MAAf,iBACA,uBAAOC,GAAG,MAAMC,KAAK,MAAMC,KAAK,MAAMnB,MAAOe,KAAKX,MAAMN,IAAIE,QAC5D,wBAAQkB,KAAK,SAAb,qBAEF,sBAAKL,UAAU,MAAf,UACE,uBAAOG,QAAQ,SAAf,iBACA,uBAAOE,KAAK,QAAQlB,MAAM,MAAMmB,KAAK,SAASC,gBAAc,IAC5D,uBAAOJ,QAAQ,SAAf,kBACA,uBAAOE,KAAK,QAAQlB,MAAM,OAAOmB,KAAK,WACtC,uBAAOH,QAAQ,SAAf,oBACA,uBAAOE,KAAK,QAAQlB,MAAM,QAAQmB,KAAK,WACvC,uBAAOH,QAAQ,SAAf,mBACA,uBAAOE,KAAK,QAAQlB,MAAM,SAASmB,KAAK,WACxC,uBAAOH,QAAQ,SAAf,iBACA,uBAAOE,KAAK,QAAQlB,MAAM,MAAMmB,KAAK,yB,GA9DhCE,IAAMC,W,iBCMVC,EARA,WACb,OACE,wBAAQV,UAAWW,IAAnB,SACE,6C,yBCDS,SAASC,EAAT,GAA+C,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,QAChD,OACE,qBAAKf,UAAU,YAAf,SACE,sBAAKI,GAAG,OAAR,UACE,wCAAWS,KACX,4BACE,cAAC,IAAD,CAAWP,KAAK,UAAUU,IAAKD,MAEjC,4BACE,cAAC,IAAD,CAAWT,KAAK,UAAUU,IAAKF,W,ICoB1BG,E,kDAzBb,WAAYtC,GAAQ,IAAD,8BACjB,cAAMA,IAMRuC,WAPmB,uCAON,WAAOxB,GAAP,SAAAZ,EAAA,6DACXO,QAAQC,IAAI,kBAAmBI,EAAKyB,MADzB,SAEL,EAAKnC,SAAS,CAAE6B,MAAOnB,EAAKyB,KAAKN,MAAQnB,EAAKyB,KAAKN,MAAQ,EAAGC,QAASpB,EAAKyB,KAAMJ,QAASrB,EAAKqB,UAF3F,2CAPM,sDAEjB,EAAKxB,MAAQ,CACXsB,MAAO,EACPC,QAAS,IAJM,E,qDAYjB,OACE,qCACE,cAAC,EAAD,IAGA,cAAC,EAAD,CAAMM,MAAO,uBAAwBzB,QAASO,KAAKgB,aACnD,cAACN,EAAD,CAASC,MAAOX,KAAKX,MAAMsB,MAAOC,QAASZ,KAAKX,MAAMuB,QAASC,QAASb,KAAKX,MAAMwB,UACnF,cAAC,EAAD,W,GApBUP,IAAMC,WCMTY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bb66da72.chunk.js","sourcesContent":["import '../scss/header.scss';\nconst Header = () => {\n  return (\n    <header>\n      <h1>RESTy</h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import '../scss/form.scss';\nimport React from 'react';\nconst superagent = require('superagent');\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { url: '', method: '' };\n  }\n\n  handleChangeUrl = async (e) => {\n    e.preventDefault();\n    await this.setState({ url: e.target.url.value, method: e.target.method.value });\n    console.log(this.state);\n    switch (this.state.method) {\n      case 'GET':\n        superagent.get(`${this.state.url}`).then((data) => {\n          this.props.handler(data);\n        });\n        break;\n      case 'POST':\n        superagent.post(`${this.state.url}`).then((data) => {\n          this.props.handler(data);\n        });\n        break;\n      case 'PATCH':\n        superagent.patch(`${this.state.url}`).then((data) => {\n          this.props.handler(data);\n        });\n        break;\n      case 'DELETE':\n        superagent.delete(`${this.state.url}`).then((data) => {\n          this.props.handler(data);\n        });\n        break;\n      case 'PUT':\n        superagent.put(`${this.state.url}`).then((data) => {\n          this.props.handler(data);\n        });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  render() {\n    return (\n      <main>\n        <div>\n          <form className=\"column\" onSubmit={this.handleChangeUrl}>\n            <div className=\"row\">\n              <label htmlFor=\"url\">URL</label>\n              <input id=\"url\" type=\"url\" name=\"url\" value={this.state.url.value} />\n              <button type=\"submit\"> GO </button>\n            </div>\n            <div className=\"row\">\n              <label htmlFor=\"method\">Get</label>\n              <input type=\"radio\" value=\"GET\" name=\"method\" defaultChecked />\n              <label htmlFor=\"method\">Post</label>\n              <input type=\"radio\" value=\"POST\" name=\"method\" />\n              <label htmlFor=\"method\">Delete</label>\n              <input type=\"radio\" value=\"PATCH\" name=\"method\" />\n              <label htmlFor=\"method\">Patch</label>\n              <input type=\"radio\" value=\"DELETE\" name=\"method\" />\n              <label htmlFor=\"method\">Put</label>\n              <input type=\"radio\" value=\"PUT\" name=\"method\" />\n            </div>\n          </form>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default Form;\n","import styles from '../scss/footer.scss';\nconst Footer = () => {\n  return (\n    <footer className={styles}>\n      <p>&copy; 2020</p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import '../scss/results.scss';\nimport React from 'react';\nimport ReactJson from 'react-json-view';\nexport default function Results({ count, results, headers }) {\n  return (\n    <div className=\"container\">\n      <div id=\"item\">\n        <p>count: {count}</p>\n        <p>\n          <ReactJson name=\"Headers\" src={headers} />\n        </p>\n        <p>\n          <ReactJson name=\"Results\" src={results} />\n        </p>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport Header from './components/Header';\nimport Form from './components/Form';\nimport Footer from './components/Footer';\nimport Results from './components/Results';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      results: [],\n    };\n  }\n  handleForm = async (data) => {\n    console.log('Hi from the App', data.body);\n    await this.setState({ count: data.body.count ? data.body.count : 1, results: data.body, headers: data.headers });\n  };\n  render() {\n    return (\n      <>\n        <Header />\n        {/* <button data-testid=\"button\" onClick={() => this.setState({ num: this.state.num + 1 })}></button>\n        <p data-testid=\"output\">{this.state.num}</p> */}\n        <Form title={'Get Star Wars People'} handler={this.handleForm} />\n        <Results count={this.state.count} results={this.state.results} headers={this.state.headers} />\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}